<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ The MIT License (MIT)
  ~
  ~ Copyright (c) 2014-2016 abel533@gmail.com
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honorzhang.postgresql.mapper.MyMapMapper">
    <resultMap id="MapElementMap" type="com.honorzhang.postgresql.model.MapElement">
        <id property="id" column="id"/>
        <result property="name" javaType="String" jdbcType="VARCHAR" column="name"/>
        <result property="uniqueCode" javaType="String" jdbcType="VARCHAR" column="unique_code"/>
        <result property="type" javaType="String" jdbcType="VARCHAR" column="type"/>
        <result property="subType" javaType="String" jdbcType="VARCHAR" column="sub_type"/>
        <result property="remark" javaType="String" jdbcType="VARCHAR" column="remark"/>
        <result property="price" javaType="BigDecimal" jdbcType="NUMERIC" column="price"/>
        <result property="geoStr" javaType="String" jdbcType="VARCHAR" column="element_location"/>



    </resultMap>


    <!--查询全部-->
    <select id="findAll" resultMap="MapElementMap">
        SELECT id, name, unique_code,
            type, sub_type, remark, price,
            ST_AsGeoJson(element_location) as element_location

            FROM map_elements
    </select>

    <select id="findById" parameterType="Long" resultMap="MapElementMap">
        SELECT id, name, unique_code,
            type, sub_type, remark, price,
            ST_AsGeoJson(element_location) as element_location
            FROM map_elements
            where id = #{id}
    </select>


    <select id="findMapElementByCircle" resultMap="MapElementMap">
        SELECT id, name, unique_code,
            type, sub_type, remark, price,
            ST_AsGeoJson(element_location) as element_location
            ST_Intersects(ST_Buffer(ST_GeomFromText(#{geoStr}, 4326)), st_geomfromewkt('SRID=4326; POLYGON((' || imageZone || '))')) = 't'"

    </select>

    <update id="updateMapElement"  parameterType="com.honorzhang.postgresql.model.MapElement" useGeneratedKeys="true" keyProperty="id" >
        UPDATE map_elements
        <trim prefix="set" suffixOverrides=",">
            <if test="name!=null">name=#{name},</if>
            <if test="uniqueCode!=null">unique_code=#{uniqueCode},</if>
            <if test="type!=null">type=#{type},</if>
            <if test="subType!=null">sub_type=#{subType},</if>
            <if test="remark!=null">remark=#{remark},</if>
            <if test="price!=null">price=#{price},</if>
            <if test="geoStr!=null">element_location=ST_GeomFromText(#{geoStr}, 4326),</if>

        </trim>
        WHERE id=#{id}
    </update>


    <insert id="addMapElement" parameterType="com.honorzhang.postgresql.model.MapElement" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" resultType="Long" order="AFTER">
            SELECT nextval('map_id_seq'::regclass)
        </selectKey>

        insert into map_elements(name, unique_code,type, sub_type, remark, price, element_location)
        values (#{name}, #{uniqueCode}, #{type}, #{subType}, #{remark}, #{price}, ST_GeomFromText(#{geoStr}, 4326))
    </insert>

    <delete id="deleteMapElement" parameterType="Long">
        delete from map_elements where id = #{id}
    </delete>

</mapper>